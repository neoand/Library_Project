name: Library Project CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: odoo
          POSTGRES_USER: odoo
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python 3.12
      uses: actions/setup-python@v3
      with:
        python-version: 3.12
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y postgresql-client libpq-dev python3-dev build-essential
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r source_odoo/requirements.txt
        pip install coverage pytest
    
    - name: Wait for PostgreSQL
      run: |
        until pg_isready -h localhost -p 5432; do
          echo "Waiting for postgres..."
          sleep 2
        done
    
    - name: Setup Odoo database
      env:
        PGPASSWORD: odoo
      run: |
        createdb -h localhost -U odoo test_library
        python3 source_odoo/odoo-bin -c odoo.conf -d test_library -i base --stop-after-init --no-http
    
    - name: Run Library App Tests
      env:
        PGPASSWORD: odoo
      run: |
        python3 source_odoo/odoo-bin -c odoo.conf -d test_library -i library_app --test-enable --stop-after-init --no-http
    
    - name: Run Code Quality Checks
      run: |
        # Check Python code style
        pip install flake8 pylint
        flake8 custom_addons/library_app --count --select=E9,F63,F7,F82 --show-source --statistics
        
        # Check XML formatting
        pip install lxml
        python -c "
        import os
        from lxml import etree
        
        for root, dirs, files in os.walk('custom_addons/library_app/views'):
            for file in files:
                if file.endswith('.xml'):
                    filepath = os.path.join(root, file)
                    try:
                        etree.parse(filepath)
                        print(f'‚úì {filepath}')
                    except Exception as e:
                        print(f'‚úó {filepath}: {e}')
                        exit(1)
        "

  performance-check:
    runs-on: ubuntu-latest
    needs: test
    
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: odoo
          POSTGRES_USER: odoo
          POSTGRES_DB: perf_test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python 3.12
      uses: actions/setup-python@v3
      with:
        python-version: 3.12
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y postgresql-client libpq-dev python3-dev build-essential
        python -m pip install --upgrade pip
        pip install -r source_odoo/requirements.txt
    
    - name: Performance Baseline Check
      env:
        PGPASSWORD: odoo
      run: |
        createdb -h localhost -U odoo perf_test
        python3 source_odoo/odoo-bin -c odoo.conf -d perf_test -i library_app --stop-after-init --no-http
        
        # Run performance queries
        psql -h localhost -U odoo -d perf_test -c "
        SELECT 'Database size check passed' as status;
        SELECT schemaname, relname as tablename, 
               pg_size_pretty(pg_total_relation_size(schemaname||'.'||relname)) as size 
        FROM pg_stat_user_tables 
        WHERE relname LIKE 'library_%' 
        ORDER BY pg_total_relation_size(schemaname||'.'||relname) DESC;
        "

  deploy-check:
    runs-on: ubuntu-latest
    needs: [test, performance-check]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Validate deployment readiness
      run: |
        echo "üöÄ Deployment validation checks"
        
        # Check required files exist
        if [ ! -f "custom_addons/library_app/__manifest__.py" ]; then
          echo "‚ùå Manifest file missing"
          exit 1
        fi
        
        if [ ! -d "custom_addons/library_app/models" ]; then
          echo "‚ùå Models directory missing"
          exit 1
        fi
        
        if [ ! -d "custom_addons/library_app/views" ]; then
          echo "‚ùå Views directory missing"
          exit 1
        fi
        
        if [ ! -d "custom_addons/library_app/security" ]; then
          echo "‚ùå Security directory missing"
          exit 1
        fi
        
        echo "‚úÖ All required files present"
        echo "‚úÖ Ready for deployment"
    
    - name: Create deployment artifact
      if: success()
      run: |
        tar -czf library_app_deployment.tar.gz custom_addons/library_app/
        echo "‚úÖ Deployment artifact created"
    
    - name: Upload deployment artifact
      uses: actions/upload-artifact@v3
      if: success()
      with:
        name: library-app-deployment
        path: library_app_deployment.tar.gz
        retention-days: 30